---
import { glob } from "glob";

type Props = {
  id?: string;
  class?: string;
};

const { id, class: className }: Props = Astro.props;
const { pathname } = Astro.url;

const files = await glob("src/pages/**/*.astro", {
  posix: true,
});
const routes = files
  .map((e) => {
    const path =
      e.replace("src/pages", "").replace(/(\/index)?\.astro/, "") || "/";
    const depth = path?.match(/\/./g)?.length ?? 0;
    const parrent = path?.replace(/\/[^\/]*$/, "") || "/";
    const title = path?.match(/([^\/]*)$/)?.[0].replaceAll(/[^\w]/g, " ");
    return {
      depth: depth,
      parrent: parrent,
      path: path,
      title: title,
    };
  })
  .filter((e) => {
    return (
      e.depth && e.parrent === pathname && !e.path.match(/(\/404)|(\/\_.*$)/)
    );
  })
  .sort((a, b) => {
    return a.path > b.path ? 1 : -1;
  });
---

<section id={id} class={className}>
  <ol class="list-inside">
    {
      routes.map((route) => (
        <li>
          <a href={route.path} class="first-letter:capitalize">
            {route.title}
          </a>
        </li>
      ))
    }
  </ol>
</section>
